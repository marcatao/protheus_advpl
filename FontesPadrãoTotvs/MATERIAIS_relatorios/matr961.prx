#include "MATR961.CH"
#Include "PROTHEUS.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³Matr961   ³ Autor ³ Mary C. Hergert       ³ Data ³11/05/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Listagem auxiliar para o preenchimento da DIPI              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function Matr961()

Local oReport
Local lVerpesssen := Iif(FindFunction("Verpesssen"),Verpesssen(),.T.)

If lVerpesssen
	If TRepInUse()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Interface de impressao                                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oReport := ReportDef()
		oReport:PrintDialog()
		Else
		Matr961R3()
	EndIf
EndIf

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportDef ³ Autor ³Mary C. Hergert        ³ Data ³11/05/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpO1: Objeto do relatório                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportDef()

Local aOrdem 	:= {STR0010} //"Resumos DIPI"

Local oReport
Local oApur
Local oNFEntSai    
Local oRemDest
Local oEntSai
Local oResES
Local oDemCdDb
Local oBreakCD  
Local cPerg	:= 'MTR961'

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Componente de impressao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oReport := TReport():New("MATR961",STR0011,cPerg, {|oReport| ReportPrint(oReport)},STR0012) // Listagem auxiliar para o preenchimento da DIPI // Este relatório irá trazer todas as movimentações necessárias ao preenchimento manual da DIPI.
oReport:SetTotalInLine(.F.)

Pergunte(oReport:uParam,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Secao 1 - Imprime o Demonstrativo de Apuracao do Saldo do IPI³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oApur := TRSection():New(oReport,STR0013,{"_TX"},aOrdem,/*Campos do SX3*/,/*Campos do SIX*/) // "Demonstrativo de Apuracao do Saldo do IPI"
oApur:SetTotalInLine(.F.)
oApur:SetPageBreak()
TRCell():New(oApur,"MESEXT"		,"_TX"	,STR0014 /*"Mês"*/									,/*Picture*/				,10,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oApur,"PEREXT"		,"_TX"	,STR0015 /*"Período"*/								,/*Picture*/				,03,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oApur,"DEBITO"		,"_TX"	,STR0016 /*"Débito"*/								,"@E 9,999,999,999.99"	,16,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oApur,"CREDITO"		,"_TX"	,STR0017 /*"Crédito"*/								,"@E 9,999,999,999.99"	,16,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oApur,"CREDOR"		,"_TX"	,STR0018 /*"Saldo Credor Período Anterior"*/	,"@E 9,999,999,999.99"	,16,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oApur,"APURADO"		,"_TX"	,STR0019 /*"Saldo Apurado"*/						,"@E) 9,999,999,999.99"	,17,/*lPixel*/,/*{|| code-block de impressao }*/)
// Totalizadores           
TRFunction():New(oApur:Cell("DEBITO")	,/* cID */,"SUM",/*oBreak*/,/*cTitle*/,"@E 9,999,999,999.99",/*uFormula*/,/*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oApur:Cell("CREDITO")	,/* cID */,"SUM",/*oBreak*/,/*cTitle*/,"@E) 9,999,999,999.99",/*uFormula*/,/*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Secao 2 - Imprime o quadro de Notas Fiscais de Entrada e o de Notas Fiscais de Saida³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oNFEntSai := TRSection():New(oReport,STR0091,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) // "Notas Fiscais de Entrada e Saída"
oNFEntSai:SetPageBreak()
TRCell():New(oNFEntSai,"NOTA"		,"   "	,STR0020 /*"Nota"*/							,/*Picture*/		,TamSX3("F2_DOC")[1],/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"SERIE"		,"   "	,STR0021 /*"Série"*/						,/*Picture*/		,03,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"DT_ENTRADA"	,"   "	,STR0022 /*"Entrada"*/						,"@E 99/99/9999",13,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"DT_EMISSAO"	,"   "	,STR0023 /*"Emissao"*/						,"@E 99/99/9999",13,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"TIPO"		,"   "	,STR0024 /*"Tipo"*/							,/*Picture*/		,01,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"CLIFOR"		,"   "	,STR0025 /*"Cod. Fornecedor"*/				,/*Picture*/		,06,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"LOJA"		,"   "	,STR0026 /*"Loja"*/							,/*Picture*/		,02,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"NOME"		,"   "	,STR0027 /*"Fornecedor"*/					,/*Picture*/		,50,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"PRODUTO"	,"   "	,STR0028 /*"Produto"*/						,/*Picture*/		,15,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"TES"		,"   "	,STR0029 /*"TES"*/							,/*Picture*/		,03,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"CFO"		,"   "	,STR0030 /*"CFOP"*/							,/*Picture*/		,04,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"VALMERC"	,"   "	,STR0031 /*"Valor Mercadoria"*/				,"@E 9,999,999,999.99",16,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oNFEntSai,"VALIPI"		,"   "	,STR0032 /*"Valor IPI"*/					,"@E 9,999,999,999.99",16,/*lPixel*/,/*{|| code-block de impressao }*/)
// Nao ha totalizador nesta secao

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Secao 3 - Imprime o quadro de Dados dos Remetentes e o de Dados dos Destinatarios³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oRemDest := TRSection():New(oReport,STR0092,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Dados dos Remetentes e Destinatários"
oRemDest:SetTotalInLine(.F.)
oRemDest:SetPageBreak()
TRCell():New(oRemDest,"CGC"			,"   "	,STR0035 /*"C.N.P.J."*/						,/*Picture*/		,20,/*{|| code-block de impressao }*/)
TRCell():New(oRemDest,"COD"			,"   "	,STR0036 /*"Código"*/						,/*Picture*/		,06,/*{|| code-block de impressao }*/)
TRCell():New(oRemDest,"LOJA"		,"   "	,STR0026 /*"Loja"*/							,/*Picture*/		,02,/*{|| code-block de impressao }*/)
TRCell():New(oRemDest,"NOME"		,"   "	,STR0037 /*"Remetente"*/					,/*Picture*/		,50,/*{|| code-block de impressao }*/)
TRCell():New(oRemDest,"VALOR"		,"   "	,STR0038 /*"Valor"*/						,"@E 9,999,999,999.99",16,/*{|| code-block de impressao }*/)
// Totalizadores           
TRFunction():New(oRemDest:Cell("VALOR")	,/* cID */,"SUM",/*oBreak*/,/*cTitle*/,"@E 9,999,999,999.99",/*uFormula*/,/*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Secao 4 - Imprime o quadro de Dados das Entradas e o de Dados das Saidas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oEntSai := TRSection():New(oReport,STR0042,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) // "Dados das Entradas"
oEntSai:SetTotalInLine(.F.)
oEntSai:SetPageBreak()
TRCell():New(oEntSai,"POSIPI"		,"   "	,STR0043 /*"Código NBM/SH"*/				,/*Picture*/		,12,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oEntSai,"COD"			,"   "	,STR0044 /*"Código do Produto"*/			,/*Picture*/		,15,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oEntSai,"DESC"			,"   "	,STR0045 /*"Mercadorias/Insumos"*/			,/*Picture*/		,55,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oEntSai,"VALOR"		,"   "	,STR0038 /*"Valor"*/						,"@E 9,999,999,999.99",16,/*lPixel*/,/*{|| code-block de impressao }*/)
// Totalizadores           
TRFunction():New(oEntSai:Cell("VALOR")	,/* cID */,"SUM",/*oBreak*/,/*cTitle*/,"@E 9,999,999,999.99",/*uFormula*/,/*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Secao 5 - Imprime o Resumo das Entradas e o Resumo das Saidas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oResES := TRSection():New(oReport,STR0046,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) // "Resumo das Entradas de Mercadorias"
oResES:SetTotalInLine(.F.)
oResES:SetPageBreak()
TRCell():New(oResES,"DESCR"	 		,"   "	,STR0047 /*"Entradas de Mercadorias"*/		,/*Picture*/		,20,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oResES,"TIPO"			,"   "	,STR0103 /*"Tipo"*/					  		,/*Picture*/		,50,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oResES,"CCREDDEB"		,"   "	,STR0048 /*"Com Créditos"*/					,"@E 9,999,999,999.99",16,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oResES,"SCREDDEB"		,"   "	,STR0049 /*"Sem Créditos"*/					,"@E 9,999,999,999.99",16,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oResES,"IPI"			,"   "	,STR0050 /*"IPI Creditado"*/				,"@E 9,999,999,999.99",16,/*lPixel*/,/*{|| code-block de impressao }*/)
// Totalizadores           
TRFunction():New(oResES:Cell("CCREDDEB")	,/* cID */,"SUM",/*oBreak*/,/*cTitle*/	,"@E 9,999,999,999.99",/*uFormula*/,/*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oResES:Cell("SCREDDEB")	,/* cID */,"SUM",/*oBreak*/,/*cTitle*/	,"@E 9,999,999,999.99",/*uFormula*/,/*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)
TRFunction():New(oResES:Cell("IPI")			,/* cID */,"SUM",/*oBreak*/,/*cTitle*/ ,"@E 9,999,999,999.99",/*uFormula*/,/*lEndSection*/,.F./*lEndReport*/,/*lEndPage*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Secao 6 - Imprime o Demonstrativo de Creditos e o Demonstrativo de Debitos³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oDemCdDb := TRSection():New(oReport,STR0059,{},/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) // "Demonstrativo de Créditos e Débitos"
oDemCdDb:SetTotalInLine(.F.)
oDemCdDb:SetPageBreak()
TRCell():New(oDemCdDb,"DESCR"		,"   "	,STR0075 /*Demonstrativo de Créditos"*/		,/*Picture*/			,80,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oDemCdDb,"TIPO"		,"   "	,STR0103 /*"TIPO"*/							,/*Picture*/			,01,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oDemCdDb,"VALOR"	  	,"   "	,STR0104 /*"VALOR"*/						,"@E 9,999,999,999.99"	,16,/*lPixel*/,/*{|| code-block de impressao }*/)
// Quebra por Tipo
oBreakDB := TRBreak():New(oDemCdDb,oDemCdDb:Cell("TIPO"),STR0060,.F.) //"Total"
TRFunction():New(oDemCdDb:Cell("VALOR")		,/* cID */,"SUM",oBreakDB,/*cTitle*/,/*Picture*/,/*uFormula*/,.F.,.F./*lEndReport*/,/*lEndPage*/)
Return(oReport)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrin³ Autor ³Eduardo Riera          ³ Data ³04.05.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ReportPrint(oReport)

Local aTRBs			:= {}
Local aEnt			:= {{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}}
Local aSai			:= {{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0},{0,0,0}}
Local aDescRes		:= {}
Local aDebCred		:= {}

Local cChave		:= ""
Local cArqDado		:= ""
Local cArqRem		:= ""
Local cArqMerc		:= ""
Local cPrdAcum		:= ""
Local cNrLivro  	:= mv_par04

Local dDtIni		:= cToD("")
Local dDtFim		:= cToD("")

Local lImpNotas 	:= (mv_par05==1)
Local lDeb			:= .F.
Local lCred			:= .F.

Local nApur			:= 0
Local nX			:= 0

Local nMesIni	  	:= mv_par01
Local nMesFim	  	:= mv_par02
Local nAno			:= SubStr(StrZero(mv_par03,4),3,2)
Local nAnoApur		:= mv_par03
Local nReg        	:= 0

#IFDEF TOP
	Private aFilsCalc	:= MatFilCalc( (MV_PAR07 == 1), , , (MV_PAR07 == 1 .and. MV_PAR08 == 1), , 3 )			// Aglutina por CNPJ Raiz
#ENDIF

// Monta a data inicial e final para processamento
dDtIni		:= cToD("01/"+StrZero(nMesIni,2)+"/"+nAno,"ddmmyy")
dDtFim		:= UltimoDia(cToD("01/"+StrZero(nMesFim,2)+"/"+nAno,"ddmmyy"))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Transforma parametros Range em expressao SQL                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MakeSqlExpr(oReport:uParam)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o tipo de apuracao selecionada³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (mv_par06 == 1)		// Decendial
	nApur := 0
ElseIf (mv_par06==2)	// Quinzenal
	nApur := 1
ElseIf (mv_par06==3)	// Mensal
	nApur := 2
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Arquivo temporario com os dados da DIPI - Processado pelo MATA975 ou Ponto de Entrada³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (ExistBlock("DIPIARQ"))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Este ponto de entrada tera que retornar um arquivo de trabalho 				³
	//³ com a seguinte estrutura:                                   		        ³
	//³ "TIPOMOV"	,	"C"	,	1	,0 	 				// "E"ntradas / "S"aidas	³
	//³ "NOTA"   	,	"C"	,	TamSX3("F2_DOC")[1]	,0	// Numero da Nota			³
	//³ "SERIE"		,	"C"	,	3	,0					// Serie					³
	//³ "ITEM"		,	"C"	,	2	,0					// Item da Nota				³
	//³ "TIPO"		,	"C"	,	1	,0					// Tipo da Nota				³
	//³ "DT_ENTRADA",	"D"	,	8	,0					// Data de Entrada			³
	//³ "DT_EMISSAO",	"D"	,	8	,0					// Data de Emissao			³
	//³ "CLIFOR"	,	"C"	,	6	,0					// Cod do Cliente/Forn.		³
	//³ "LOJA"		,	"C"	,	2	,0					// Loja						³
	//³ "NOME"		,	"C"	,	50	,0					// Razao social				³
	//³ "CGC"		,	"C"	,	18	,0					// CGC						³
	//³ "UF"		,	"C"	,	2	,0					// UF						³
	//³ "TIPOCLIFOR",	"C"	,	1	,0					// Tipo do Cliente/Forn.	³
	//³ "PRODUTO"	,	"C"	,	15	,0					// Cod do Produto			³
	//³ "DESCPROD"	,	"C"	,	50	,0					// Descricao do Produto		³
	//³ "NBM"		,	"C"	,	12	,0					// Codigo NBM				³
	//³ "TES"		,	"C"	,	3	,0					// TES						³
	//³ "CFO"		,	"C"	,	4	,0					// CFO						³
	//³ "VALMERC"	,	"N"	,	14	,2					// Valor da Mercadoria		³
	//³ "VALIPI"	,	"N"	,	14	,2					// Valor do IPI				³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cArqDado := ExecBlock("DIPIARQ",.F.,.F.)
Else
	cArqDado :=	A975Moviment(nMesIni,nMesFim,cNrLivro,dDtIni,dDtFim,.F., aFilsCalc)
Endif                    

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria arquivo temporario - Remetentes/Destinatarios - MATA975 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cArqRem := a975CriaRem()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria arquivo temporario - Mercadoria - MATA975               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cArqMerc :=	a975CriaMerc()
cPrdAcum :=	a975PrdAcum()  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Resumo das Movimentacoes - Processado atraves do MATA975³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
A975Resumo(cArqDado,cArqRem,cArqMerc,cPrdAcum,@aEnt,@aSai,aFilsCalc)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta o Desmonstrativo de Debitos e Creditos³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aDebCred := Mtr961DbCd(aEnt,aSai)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Cria o arquivo temporario com as informacoes da apuracao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aTRBS := Mtr961Apur(nApur,nMesIni,nMesFim,nAnoApur,@aDebCred)                                   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adiciona os demais arquivos temporarios para serem excluidos apos o processamento³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd(aTRBs,{cArqDado,cArqDado})
aAdd(aTRBs,{cArqRem,cArqRem})
aAdd(aTRBs,{cArqMerc,cArqMerc})
aAdd(aTRBs,{cPrdAcum,cPrdAcum})
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Demonstrativo de apuracao do saldo do IPI³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("_TX")
oReport:SetMeter(_TX->(LastRec()))
oReport:PrintText(STR0013) //"Demonstrativo de Apuração do Saldo do IPI"      
oReport:Section(1):SetTotalText(STR0060) // "Total"
oReport:SkipLine()
oReport:Section(1):Print()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Notas Fiscais de Entrada³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lImpNotas
	// Alterando codeblocks para impressao dos campos da tabela temporaria carregada no MATA975
	oReport:Section(2):Cell("NOTA"):SetBlock({|| (cArqDado)->NOTA })
	oReport:Section(2):Cell("SERIE"):SetBlock({|| (cArqDado)->SERIE })
	oReport:Section(2):Cell("DT_ENTRADA"):SetBlock({|| (cArqDado)->DT_ENTRADA })
	oReport:Section(2):Cell("DT_EMISSAO"):SetBlock({|| (cArqDado)->DT_EMISSAO })
	oReport:Section(2):Cell("TIPO"):SetBlock({|| (cArqDado)->TIPO })
	oReport:Section(2):Cell("CLIFOR"):SetBlock({|| (cArqDado)->CLIFOR })
	oReport:Section(2):Cell("LOJA"):SetBlock({|| (cArqDado)->LOJA })
	oReport:Section(2):Cell("NOME"):SetBlock({|| (cArqDado)->NOME })
	oReport:Section(2):Cell("PRODUTO"):SetBlock({|| (cArqDado)->PRODUTO })
	oReport:Section(2):Cell("TES"):SetBlock({|| (cArqDado)->TES })
	oReport:Section(2):Cell("CFO"):SetBlock({|| (cArqDado)->CFO })
	oReport:Section(2):Cell("VALMERC"):SetBlock({|| (cArqDado)->VALMERC })
	oReport:Section(2):Cell("VALIPI"):SetBlock({|| (cArqDado)->VALIPI })
	// Imprimindo a secao
	dbSelectArea(cArqDado)  
	(cArqDado)->(dbGoTop())
	oReport:SetMeter((cArqDado)->(LastRec()))
	oReport:Section(2):Init()
	oReport:PrintText(STR0039) //"Notas Fiscais de Entrada"  
	oReport:SkipLine()
	While !oReport:Cancel() .And. !(cArqDado)->(Eof())
	
		// Imprime somente os documentos de entrada                     
		If Left((cArqDado)->CFO,1) $ "123"
			If cChave <> (cArqDado)->NOTA+(cArqDado)->SERIE+(cArqDado)->CLIFOR+(cArqDado)->LOJA 
		   		If !Empty(cChave)
		    		oReport:ThinLine() 
		    	Endif
				cChave := (cArqDado)->NOTA+(cArqDado)->SERIE+(cArqDado)->CLIFOR+(cArqDado)->LOJA
				oReport:Section(2):Cell("NOTA"):Show()
				oReport:Section(2):Cell("SERIE"):Show()
				oReport:Section(2):Cell("DT_ENTRADA"):Show()
				oReport:Section(2):Cell("DT_EMISSAO"):Show()
				oReport:Section(2):Cell("TIPO"):Show()
				oReport:Section(2):Cell("CLIFOR"):Show()
				oReport:Section(2):Cell("LOJA"):Show()
				oReport:Section(2):Cell("NOME"):Show()
			Else                                        
				oReport:Section(2):Cell("NOTA"):Hide()
				oReport:Section(2):Cell("SERIE"):Hide()
				oReport:Section(2):Cell("DT_ENTRADA"):Hide()
				oReport:Section(2):Cell("DT_EMISSAO"):Hide()
				oReport:Section(2):Cell("TIPO"):Hide()
				oReport:Section(2):Cell("CLIFOR"):Hide()
				oReport:Section(2):Cell("LOJA"):Hide()
				oReport:Section(2):Cell("NOME"):Hide()
			Endif
			
			oReport:Section(2):PrintLine() 	
	
		Endif
		oReport:IncMeter()
		(cArqDado)->(dbSkip())
	Enddo
	oReport:Section(2):Finish() 	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Notas Fiscais de Saida³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lImpNotas
	cChave := ""
	dbSelectArea(cArqDado)  
	(cArqDado)->(dbGoTop())
	oReport:SetMeter((cArqDado)->(LastRec()))
	oReport:Section(2):Init()
	oReport:PrintText(STR0040) //"Notas Fiscais de Saida"  
	oReport:SkipLine()
	oReport:Section(2):Cell("DT_ENTRADA"):Disable()
	oReport:Section(2):Cell("CLIFOR"):SetTitle(STR0033) //"Cod. Cliente
	oReport:Section(2):Cell("NOME"):SetTitle(STR0034) //"Cliente
	While !oReport:Cancel() .And. !(cArqDado)->(Eof())
	
		// Imprime somente os documentos de saida                       
		If Left((cArqDado)->CFO,1) $ "567"
			If cChave <> (cArqDado)->NOTA+(cArqDado)->SERIE+(cArqDado)->CLIFOR+(cArqDado)->LOJA 
		   		If !Empty(cChave)
		    		oReport:ThinLine() 
		    	Endif
				cChave := (cArqDado)->NOTA+(cArqDado)->SERIE+(cArqDado)->CLIFOR+(cArqDado)->LOJA
				oReport:Section(2):Cell("NOTA"):Show()
				oReport:Section(2):Cell("SERIE"):Show()
				oReport:Section(2):Cell("DT_EMISSAO"):Show()
				oReport:Section(2):Cell("TIPO"):Show()
				oReport:Section(2):Cell("CLIFOR"):Show()
				oReport:Section(2):Cell("LOJA"):Show()
				oReport:Section(2):Cell("NOME"):Show()
			Else                                        
				oReport:Section(2):Cell("NOTA"):Hide()
				oReport:Section(2):Cell("SERIE"):Hide()
				oReport:Section(2):Cell("DT_EMISSAO"):Hide()
				oReport:Section(2):Cell("TIPO"):Hide()
				oReport:Section(2):Cell("CLIFOR"):Hide()
				oReport:Section(2):Cell("LOJA"):Hide()
				oReport:Section(2):Cell("NOME"):Hide()
			Endif
			
			oReport:Section(2):PrintLine() 	
	
		Endif
		oReport:IncMeter()
		(cArqDado)->(dbSkip())
	Enddo
	oReport:Section(2):Finish() 	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Dados dos Remetentes³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Alterando codeblocks para impressao dos campos da tabela temporaria carregada no MATA975
oReport:Section(3):Cell("CGC"):SetBlock({|| (cArqRem)->CGC })
oReport:Section(3):Cell("COD"):SetBlock({|| (cArqRem)->CODIGO })
oReport:Section(3):Cell("LOJA"):SetBlock({|| (cArqRem)->LOJA })
oReport:Section(3):Cell("NOME"):SetBlock({|| (cArqRem)->NOME })
oReport:Section(3):Cell("VALOR"):SetBlock({|| (cArqRem)->VALOR })
//
dbSelectArea(cArqRem)  
(cArqRem)->(dbGoTop())
oReport:SetMeter((cArqRem)->(LastRec()))
oReport:Section(3):Init()
oReport:Section(3):SetTotalText(STR0060) // "Total"
oReport:PrintText(STR0041) //"Dados dos Remetentes"  
oReport:SkipLine()
dbSetOrder(2)  //Ordem Desc de valor
dbSeek("E")
While !oReport:Cancel() .And. !(cArqRem)->(Eof()) .AND. (cArqRem)->TIPO == "E" 
		oReport:Section(3):PrintLine() 	
	(cArqRem)->(dbSkip())
Enddo
oReport:Section(3):Finish() 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Dados das Entradas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Alterando codeblocks para impressao dos campos da tabela temporaria carregada no MATA975
oReport:Section(4):Cell("POSIPI"):SetBlock({|| (cPrdAcum)->NBM })
oReport:Section(4):Cell("COD"):SetBlock({|| (cPrdAcum)->CODIGO })
oReport:Section(4):Cell("DESC"):SetBlock({|| (cPrdAcum)->MERCAD })
oReport:Section(4):Cell("VALOR"):SetBlock({|| (cPrdAcum)->VALOR })
//
dbSelectArea(cPrdAcum)  
(cPrdAcum)->(dbGoTop())
oReport:SetMeter((cPrdAcum)->(LastRec()))
oReport:Section(4):Init()               
oReport:PrintText(STR0042) //"Dados das Entradas" 
oReport:SkipLine()
oReport:Section(4):SetTotalText(STR0060) // "Total"
nReg := 0
dbSetOrder(2)  //Ordem Desc de valor
dbSeek("E")
While !oReport:Cancel() .And. (cPrdAcum)->(!eof()) .AND. (cPrdAcum)->TIPO == "E" .And. nReg <= 50
	oReport:Section(4):PrintLine() 	
	nReg ++
	(cPrdAcum)->(dbSkip())
Enddo
oReport:Section(4):Finish() 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Resumo das Entradas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAdd(aDescRes,{STR0061,""}) 		//"Insumos"
aAdd(aDescRes,{STR0062,""}) 		//"Mercadorias para Comercialização"
aAdd(aDescRes,{STR0063,STR0064}) 	//"Industrialização efetuada por outras Empresas","Mercado Nacional"
aAdd(aDescRes,{STR0065,""}) 		//"Devolução de Vendas"
aAdd(aDescRes,{STR0066,""}) 		//"Outras Entradas"
aAdd(aDescRes,{STR0061,""}) 		//"Insumos"
aAdd(aDescRes,{STR0062,STR0067}) 	//"Mercadorias para Comercialização","Mercado Internacional"
aAdd(aDescRes,{STR0065,""}) 		//"Devolução de Vendas"
aAdd(aDescRes,{STR0066,""}) 		//"Outras Entradas"
//
oReport:SetMeter(Len(aEnt))
oReport:Section(5):Init()               
oReport:PrintText(STR0046) //"Resumo das Entradas de Mercadorias" 
oReport:SkipLine()
oReport:Section(5):SetTotalText(STR0068) // "Total do Resumo"
// O array armazena os totais nas posicoes 10 e 11 que nao serao utilizadas devido a soma automatica da secao
For nX := 1 To 9
	oReport:Section(5):Cell("DESCR"):SetValue(aDescRes[nX][02])
	oReport:Section(5):Cell("TIPO"):SetValue(aDescRes[nX][01])
	oReport:Section(5):Cell("CCREDDEB"):SetValue(aEnt[nX][01])
	oReport:Section(5):Cell("SCREDDEB"):SetValue(aEnt[nX][02])
	oReport:Section(5):Cell("IPI"):SetValue(aEnt[nX][03])
	oReport:Section(5):PrintLine() 		 	
	If nX == 5   
   		oReport:ThinLine() 
	Endif
Next nPos
oReport:Section(5):Finish()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Dados dos Destinatarios³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cArqRem)  
(cArqRem)->(dbGoTop())
oReport:SetMeter((cArqRem)->(LastRec()))
oReport:Section(3):Init()
oReport:PrintText(STR0051) //"Dados dos Destinatários"      
oReport:SkipLine()
oReport:Section(3):SetTotalText(STR0060) // "Total"
oReport:Section(3):Cell("NOME"):SetTitle(STR0052) //"Destinatário"
dbSetOrder(2)  //Ordem Desc de valor
dbSeek("S")
While !oReport:Cancel() .And. !(cArqRem)->(Eof()) .AND. (cArqRem)->TIPO == "S" 
		oReport:Section(3):PrintLine() 	
	(cArqRem)->(dbSkip())
Enddo
oReport:Section(3):Finish() 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Dados das Saidas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cPrdAcum)  
(cPrdAcum)->(dbGoTop())
oReport:SetMeter((cPrdAcum)->(LastRec()))
oReport:Section(4):Init()               
oReport:PrintText(STR0053) //"Dados das Saídas" 
oReport:SkipLine()
oReport:Section(4):SetTotalText(STR0060) // "Total"
nReg := 0
dbSetOrder(2)  //Ordem Desc de valor
dbSeek("S")
While !oReport:Cancel() .And. (cPrdAcum)->(!eof()) .AND. (cPrdAcum)->TIPO == "S" .And. nReg <= 50
	oReport:Section(4):PrintLine() 	
	nReg ++
	(cPrdAcum)->(dbSkip())
Enddo
oReport:Section(4):Finish() 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Resumo das Saidas³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aDescRes := {}
aAdd(aDescRes,{STR0069,""}) 		//"Produção do Estabelecimento"
aAdd(aDescRes,{STR0070,""}) 		//"Mercadorias Adquiridsa ou Rec. Comercialização"
aAdd(aDescRes,{STR0071,STR0064}) 	//"Industrialização efetuada para outras Empresas", "Mercado Nacional"
aAdd(aDescRes,{STR0072,""}) 		//"Devolução de Compras"
aAdd(aDescRes,{STR0073,""}) 		//"Outras Saídas"
aAdd(aDescRes,{STR0069,""}) 		//"Produção do Estabelecimento"
aAdd(aDescRes,{STR0070,STR0067}) 	//"Mercadorias Adquiridsa ou Rec. Comercialização", "Mercado Internacional"
aAdd(aDescRes,{STR0072,""}) 		//"Devolução de Compras"
aAdd(aDescRes,{STR0073,""}) 		//"Outras Saídas"
//
oReport:SetMeter(Len(aSai))
oReport:Section(5):Init()               
oReport:PrintText(STR0054) //"Resumo das Saidas de Mercadorias" 
oReport:SkipLine()
oReport:Section(5):Cell("DESCR"):SetTitle(STR0055) 	// "Saidas de Mercadorias"
oReport:Section(5):Cell("CCREDDEB"):SetTitle(STR0056) 	// "Com Débito"
oReport:Section(5):Cell("SCREDDEB"):SetTitle(STR0057) 	// "Sem Debito"
oReport:Section(5):Cell("IPI"):SetTitle(STR0058) 		// IPI Debitado
// O array armazena os totais nas posicoes 10 e 11 que nao serao utilizadas devido a soma automatica da secao
For nX := 1 To 9
	oReport:Section(5):Cell("DESCR"):SetValue(aDescRes[nX][02])
	oReport:Section(5):Cell("TIPO"):SetValue(aDescRes[nX][01])
	// Saidas para o exterior nao tem debito de IPI, conforme programa validador da DIPJ
	If nX <= 5
		oReport:Section(5):Cell("CCREDDEB"):SetValue(aSai[nX][01])
	Else                                                           
		oReport:Section(5):Cell("CCREDDEB"):SetValue(0)
		oReport:Section(5):Cell("CCREDDEB"):Hide()
	Endif
	oReport:Section(5):Cell("SCREDDEB"):SetValue(aSai[nX][02])
	oReport:Section(5):Cell("IPI"):SetValue(aSai[nX][03])
	oReport:Section(5):PrintLine() 		 	
	If nX == 5   
   		oReport:ThinLine() 
	Endif
Next nPos
oReport:Section(5):Finish()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Demonstrativo de Creditos e Demonstrativo de Debitos³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
// Alterando codeblocks para impressao dos campos do array
oReport:Section(6):Cell("DESCR"):SetBlock({|| aDebCred[nX][02] })
oReport:Section(6):Cell("TIPO"):SetBlock({|| aDebCred[nX][01] })
oReport:Section(6):Cell("VALOR"):SetBlock({|| aDebCred[nX][03] })
//
oReport:SetMeter(Len(aDebCred))
oReport:Section(6):Init()               
oReport:PrintText(STR0059)  // "Demonstrativo de Créditos e Débitos"
oReport:SkipLine()
oReport:Section(6):Cell("TIPO"):Disable()
// Imprimindo os creditos
For nX := 1 To Len(aDebCred)           
	If aDebCred[nX][01] == "C"
		oReport:Section(6):PrintLine() 	
	Endif
Next 
// Imprimindo os debitos
oReport:Section(6):Cell("DESCR"):SetTitle(STR0076) //"Demonstrativo de Débitos"
For nX := 1 To Len(aDebCred)           
	If aDebCred[nX][01] == "D"
		oReport:Section(6):PrintLine() 	
	Endif
Next 
oReport:Section(6):Finish() 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Exclui os arquivos temporarios utilizados no relatorio³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Mtr961Del(aTRBs)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³Mtr961Apur³ Autor ³Mary C. Hergert        ³ Data ³11/05/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Le as apuracoes de IPI e carrega o arquivo temporario para  ³±±
±±³          ³impressao.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpA1: Array contendo o nome/alias dos temporarios criados  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Periodo de apuracao                                  ³±±
±±³          ³ExpN2: Mes inicial para processamento                       ³±±
±±³          ³ExpN2: Mes final para processamento                         ³±±
±±³          ³ExpN2: Ano para o processamento                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Mtr961Apur(nPeriodo,nMesIni,nMesFim,nAno,aDebCred)

Local 	aCampos		:= {}
Local 	aCodigos    := {}
Local	aOutrApur	:= {}             
Local	aDados		:=	Array(6)                    
Local 	aTRBs		:= {}

Local	cArqTemp	:= ""	
Local	cArqApur	:= ""
Local	cConteudo	:= ""
Local	cLinha		:= ""
Local 	cDesc		:= ""
Local 	cCodigo		:= ""
Local	cValor		:= ""

Local	lAchou		:= .F.

Local	i,j,w		:= 0
Local	nValor      := 0
Local 	nDevVen 	:= 0
Local 	nDevCom 	:= 0	
Local	nPos		:= 0	
Local	nApuracao	:= 0	
Local	nTpApur		:= 0	
Local	nPosX		:= 0
Local	nApurCfp	:= 0	
Local	nLin 		:= 0

Default nPeriodo	:= 1

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria arquivo para armazenar apuracoes   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aCampos,{"PERIODO"		,"C"	,02	,0	})
AADD(aCampos,{"_001"		,"N"	,14	,2	})
AADD(aCampos,{"_002"		,"N"	,14	,2	})
AADD(aCampos,{"_003"		,"N"	,14	,2	})
AADD(aCampos,{"_004"		,"N"	,14	,2	})
AADD(aCampos,{"_005"		,"N"	,14	,2	})
AADD(aCampos,{"_006"		,"N"	,14	,2	})
AADD(aCampos,{"_007"		,"N"	,14	,2	})
AADD(aCampos,{"_008"		,"N"	,14	,2	})
AADD(aCampos,{"_009"		,"N"	,14	,2	})
AADD(aCampos,{"_010"		,"N"	,14	,2	})
AADD(aCampos,{"_011"		,"N"	,14	,2	})
AADD(aCampos,{"_012"		,"N"	,14	,2	})
AADD(aCampos,{"_013"		,"N"	,14	,2	})
AADD(aCampos,{"_014"		,"N"	,14	,2	})
AADD(aCampos,{"_015"		,"N"	,14	,2	})
AADD(aCampos,{"_016"		,"N"	,14	,2	})
AADD(aCampos,{"_017"		,"N"	,14	,2	})
AADD(aCampos,{"MES"			,"C"	,02	,0	})
cArqTemp :=	CriaTrab(aCampos)
dbUseArea(.T.,,cArqTemp,"APU",.T.,.F.)
IndRegua("APU",cArqTemp,"MES+PERIODO",,,STR0093) //"Indexando apura‡”es"
Aadd(aTRBs,{cArqTemp,"APU"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria arquivo para armazenar a impressao da apuracoes   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCampos := {}
AADD(aCampos,{"MES"		,"C"	,02	,0	}) 
AADD(aCampos,{"PERIODO"	,"C"	,02	,0	}) 
AADD(aCampos,{"MESEXT"	,"C"	,10	,0	}) 
AADD(aCampos,{"PEREXT"	,"C"	,10	,0	}) 
AADD(aCampos,{"DEBITO"	,"N"	,14	,2	}) 
AADD(aCampos,{"CREDITO"	,"N"	,14	,2	}) 
AADD(aCampos,{"CREDOR"	,"N"	,14	,2	}) 
AADD(aCampos,{"APURADO"	,"N"	,14	,2	}) 
cArqTemp :=	CriaTrab(aCampos)
dbUseArea(.T.,,cArqTemp,"_TX",.T.,.F.)
IndRegua("_TX",cArqTemp,"MES+PERIODO",,,STR0093) //"Indexando apura‡”es"
Aadd(aTRBs,{cArqTemp,"_TX"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Estrutura do array aOutrApur:                                                                  ³
//³[1] : Mes                                                                                      ³
//³[2] em diante : Arquivos de apuracao. Caso possua 1 eh Mensal, 2 eh Quinzenal e 3 eh Decendial.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// Apuracoes mes a mes
For i := nMesIni to nMesFim
	lAchou	:=	.F.

	//Decendial por NCM
	cArqApur :=	NmArqApur("IP", nAno, i, 1, 3,"*", .T.)
	If File(cArqApur)	
		aAdd (aOutrApur, {})
		nPos	:=	Len (aOutrApur)
		aAdd (aOutrApur[nPos], i)

		cArqApur	:=	NmArqApur ("IP", nAno, i, 1, 1,"*", .T.)
		aAdd (aOutrApur[nPos], cArqApur)

		cArqApur	:=	NmArqApur ("IP", nAno, i, 1, 2,"*", .T.)
		aAdd (aOutrApur[nPos], cArqApur)

		cArqApur	:=	NmArqApur ("IP", nAno, i, 1, 3,"*", .T.)
		aAdd (aOutrApur[nPos], cArqApur)

		lAchou	:=	.T.
	EndIf

	//Decendial Normal
	If !(lAchou)
		cArqApur	:=	NmArqApur("IP", nAno, i, 1, 3,"*", .F.)
		If File (cArqApur)	
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)

			cArqApur	:=	NmArqApur ("IP", nAno, i, 1, 1,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)

			cArqApur	:=	NmArqApur ("IP", nAno, i, 1, 2,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)

			cArqApur	:=	NmArqApur ("IP", nAno, i, 1, 3,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)

			lAchou	:=	.T.
		EndIf
	EndIf

	//Quinzenal por NCM
	If !(lAchou)
		cArqApur	:=	NmArqApur ("IP", nAno, i, 2, 2,"*", .T.)
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)

			cArqApur	:=	NmArqApur("IP", nAno, i, 2, 1,"*", .T.)
			aAdd (aOutrApur[nPos], cArqApur)

			cArqApur	:=	NmArqApur("IP", nAno, i, 2, 2,"*", .T.)
			aAdd (aOutrApur[nPos], cArqApur)

			lAchou	:=	.T.
		EndIf
	EndIf

	//Quinzenal Normal
	If !(lAchou)
		cArqApur	:=	NmArqApur ("IP", nAno, i, 2, 2,"*", .F.)
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)

			cArqApur	:=	NmArqApur("IP", nAno, i, 2, 1,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)

			cArqApur	:=	NmArqApur("IP", nAno, i, 2, 2,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)

			lAchou	:=	.T.
		EndIf				
	EndIf

	//Mensal por NCM
	If !(lAchou)
		cArqApur	:=	NmArqApur ("IP", nAno, i, 3, 1,"*", .T.)
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)

			cArqApur	:=	NmArqApur("IP", nAno, i, 3, 1,"*", .T.)
			aAdd (aOutrApur[nPos], cArqApur)
		EndIf
	EndIf

	//Mensal Normal
	If !(lAchou)
		cArqApur	:=	NmArqApur ("IP", nAno, i, 3, 1,"*", .F.)
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)

			cArqApur	:=	NmArqApur("IP", nAno, i, 3, 1,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)
		EndIf
	EndIf
Next (i)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca dados em arquivos de apuracao     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For i := nMesIni to nMesFim

	nPosX	:=	aScan (aOutrApur, {|x| x[1]==i})
	If nPosX==0
		nTpApur	:=	IIf (nPeriodo==2, 1, IIf (nPeriodo==1, 2, 3))
	Else
		nTpApur	:=	Len (aOutrApur[nPosX])-1
	EndIf

	For j := 1 to nTpApur

		RecLock("APU",.T.)
		APU->MES 	:= StrZero (i, 2)

		If (nTpApur == 3)		//Decendial
			APU->PERIODO	:=	StrZero (j, 2)
			nApuracao	:=	0
		ElseIf (nTpApur == 2)	//Quinzenal
			APU->PERIODO	:=	StrZero (j+3, 2)
			nApuracao	:=	1
		ElseIf (nTpApur == 1)	//Mensal
			APU->PERIODO	:=	"00"
			nApuracao	:=	2
		EndIf

		MsUnLock ()

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta nome do arquivo do periodo        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (nPosX==0)
			Loop
		Else
			cArqApur	:=	aOutrApur[nPosX][j+1]
		EndIf

		APU->(dbSeek(StrZero(i,2)+IIf(nApuracao==2, "00", IIf (nApuracao==1, StrZero (j+3, 2), StrZero(j,2)))))
		RecLock("APU",.F.)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega e Grava valores                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nDevCom		:= 0
		nDevVen		:= 0
		cConteudo	:=	MemoRead(cArqApur)
		aCodigos	:=	{"001","002","003","004","005","006","007","008","009","010","011","012","013","014","015","016","017","018"}

		For w := 1 to MlCount(cConteudo,132)
			cLinha	:=	MemoLine(cConteudo,132,w)
			cDesc	:= substr(cLinha,5,20)
			cCodigo	:=	Trim(Substr(cLinha,1,3))
			If (cCodigo == "010" .and. upper(alltrim(cDesc))=="DEVOLUCOES DE COMPRA") .or.;
				(cCodigo == "004" .and. upper(alltrim(cDesc))=="DEVOLUCOES DE VENDA")
				cValor	:=	Trim(Substr(cLinha,52,18))
				cValor	:=	StrTran(cValor,".")
				cValor	:=	StrTran(cValor,",",".") 
				nValor	:=	Val(cValor)              
				If cCodigo =="010"
					nDevCom	:= nValor
				elseIf cCodigo =="004"	
					nDevVen	:= nValor
				endIf
			EndIf	
			nPos :=	Ascan(aCodigos,{|x|x==cCodigo})
			If nPos==0
				Loop
			Else
				aCodigos[nPos]:="..."
			EndIf
			cValor	:=	Trim(Substr(cLinha,52,18))
			cValor	:=	StrTran(cValor,".")
			cValor	:=	StrTran(cValor,",",".")
			nValor	:=	Val(cValor)
			FieldPut(nPos+1,nValor)
		Next w
		APU->_010	-=nDevCom
		APU->_004	-=nDevVen
		MsUnlock()  
	Next j
Next i

APU->(dbGoTop())      

Do While ! APU->(Eof())

	RecLock("_TX",.T.)	
	_TX->MES 		:= APU->MES
	_TX->MESEXT		:= MesExtenso(Val(APU->MES))
	_TX->PERIODO 	:= APU->PERIODO

	If ("00"$APU->PERIODO)
		_TX->PEREXT	 := "Mensal"
	ElseIf ("01"$APU->PERIODO) .Or. ("02"$APU->PERIODO) .Or. ("03"$APU->PERIODO)
		_TX->PEREXT	 :=  StrZero(Val(PERIODO),1) + ". Dec"
	ElseIf ("04"$APU->PERIODO) .Or. ("05"$APU->PERIODO)
		_TX->PEREXT	 :=  StrZero(Val(PERIODO)-3,1) + ". Qui"
	EndIf  
	       
	_TX->DEBITO 	:= APU->_013
	_TX->CREDITO	:= APU->_006
	_TX->CREDOR		:= APU->_007
	_TX->APURADO	:= Max(APU->_016,APU->_017) * If(APU->_017 > 0,-1,1)
	
	MsUnLock()	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Demonstrativos de Debito e Credito³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aDebCred[08][03] +=	 APU->_005
	aDebCred[14][03] +=	 APU->_010
	aDebCred[15][03] +=	 APU->_011
	aDebCred[16][03] +=	 APU->_012
	aDebCred[07][03] += APU->_004

	APU->(dbSkip())	
	
EndDo

Return(aTRBs)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³Mtr961DbCd ºAutor  ³ Mary C. Hergert    º Data ³ 19/05/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³Monta o demonstrativo de Debitos/Creditos atraves das        º±±
±±º         ³informacoes dos temporarios/arrays do MATA975.               º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³Matr961                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Mtr961DbCd(aEnt,aSai)

Local aDebCred := {}

aAdd(aDebCred,{"C",STR0077 /*"Entradas de Insumos do Mercado Nacional"*/,aEnt[1,3]})
aAdd(aDebCred,{"C",STR0078 /*"Entradas de Mercadorias do Mercado Nacional para Comercialização"*/,aEnt[2,3]})
aAdd(aDebCred,{"C",STR0079 /*"Entradas de Industrialização efetuadas por outras Empresas"*/,aEnt[3,3]})
aAdd(aDebCred,{"C",STR0080 /*"Entradas de Insumos do Mercado Externo"*/,aEnt[6,3]})
aAdd(aDebCred,{"C",STR0081 /*"Entradas de Mercadorias do Mercado Externo para Comercialização"*/,aEnt[7,3]})
aAdd(aDebCred,{"C",STR0065 /*"Devoluções de Venda"*/,aEnt[4,3]+aEnt[8,3]})
aAdd(aDebCred,{"C",STR0082 /*"Estorno de Débitos"*/,0})
aAdd(aDebCred,{"C",STR0083 /*"Outros Créditos"*/,0})
aAdd(aDebCred,{"C",STR0066 /*"Outras Entradas"*/,aEnt[5,3]+aEnt[9,3]})
aAdd(aDebCred,{"D",STR0084 /*"Saídas para o Mercado Nacional de Produção do Estabelecimento"*/,aSai[1,3]})
aAdd(aDebCred,{"D",STR0085 /*"Saídas de Mercadorias para o Mercado Nacional Adq. ou Rec. para Comercialização"*/,aSai[2,3]})
aAdd(aDebCred,{"D",STR0086 /*"Saídas de Industrialização efetuada para Outras Empresas"*/,aSai[3,3]})
aAdd(aDebCred,{"D",STR0087 /*"Outras Saídas para o Mercado Nacional"*/,aSai[5,3]})
aAdd(aDebCred,{"D",STR0088 /*"Estorno de Créditos"*/,0})
aAdd(aDebCred,{"D",STR0089 /*"Ressarcimento de Créditos"*/,0})
aAdd(aDebCred,{"D",STR0090 /*"Outros Débitos"*/,0})
// Somente devem ser consideradas as devolucoes no mercado interno, conforme programa validador da DIPJ
aAdd(aDebCred,{"D",STR0072 /*"Devoluções de Compra"*/,aSai[4,3]})

Return aDebCred


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao   ³Mtr961Del  ºAutor  ³ Mary C. Hergert    º Data ³ 11/05/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.    ³Exclui os arquivos temporarios criados pelo relatorio        º±±
±±ÌÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso      ³Matr961                                                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Mtr961Del(aDelArqs)

Local aAreaDel	:= GetArea()
Local nI 		:= 0

For nI:= 1 To Len(aDelArqs)
	If File(aDelArqs[ni,1]+GetDBExtension())
		dbSelectArea(aDelArqs[ni,2])
		dbCloseArea()
		Ferase(aDelArqs[ni,1]+GetDBExtension())
		Ferase(aDelArqs[ni,1]+OrdBagExt())
	Endif	
Next

RestArea(aAreaDel)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATR961R3³ Autor ³ Juan Jose Pereira     ³ Data ³ 08/01/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ DIPI                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION MATR961R3
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL aSv:={Alias(),IndexOrd(),Recno()}
wnRel		:=	"MATR961"
Titulo	:=	STR0001 //"DIPI"
cDesc1	:=	STR0002 //"Emiss„o de listagem para auxiliar o preenchimento da DIPI."
cDesc2	:=	""
cDesc3	:=	STR0003 //"Ir  imprimir os lan‡amentos fiscais conforme os parƒmetros informados."
aReturn	:=	{ STR0004, 1,STR0005, 2, 2, 1, "",1 } //"Zebrado"###"Administra‡„o"
nomeprog	:=	"MATR961"
cPerg		:=	"MTR961"
cString	:=	"SF3"
Tamanho	:=	'G'
Limite	:=	220
nTipo		:=	18
cabec1	:=	""
cabec2	:=	""
cabec3	:=	"" 
m_pag		:=	1
cbtxt		:=	SPACE(10)
cbcont	:=	0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nLastKey	:=	0
wnrel:=	SetPrint(cString,wnrel,cPerg,Titulo,cDesc1,cDesc2,cDesc3,.F.,"",.F.,"G",,.F.)
If nLastKey==27
  	dbClearFilter()
  	Return
Endif
SetDefault(aReturn,cString)
If nLastKey==27
  	dbClearFilter()
  	Return
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Executa relatorio                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFNDEF WINDOWS
	R961Imp(.F.,wnRel,cString,Tamanho)
#ELSE
	RptStatus({|lEnd| R961Imp(@lEnd,wnRel,cString,Tamanho)},titulo)
#ENDIF

#IFNDEF WINDOWS
	Set Device to Screen
#ENDIF
If aReturn[5]==1
  	Set Printer To 	
   ourspool(wnrel)
Endif
MS_FLUSH()

dbSelectArea(aSv[1])
dbSetOrder(aSv[2])
dbGoto(aSv[3])

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ R961Imp  ³ Autor ³ Juan Jose Pereira     ³ Data ³ 18.12.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada da funcao de impressao                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION R961Imp(lEnd,wnRel,cString,Tamanho)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define variaveis              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
LOCAL 	lMatr962	:=(existblock("MATR962"))
PRIVATE 	nPagina	:=	1
PRIVATE	nLin		:=	80
PRIVATE	nLargMax	:=	132
PRIVATE	nLimPag	:=	60
lAbortPrint	:=	.F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Recebe valores dos Parametros ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
pergunte(cPerg,.F.)
PRIVATE 	nMesIni	  := mv_par01	,;
			nMesFim	  := mv_par02	,;
			nAno		:=	SUBS(STRZERO(mv_par03,4),3,2),;
			cNrLivro  := mv_par04	,;
			lImpNotas :=(mv_par05==1),;
			nAno4		:=	mv_par03
PRIVATE 	dDtIni,dDtFim

dDtIni  :=  CTOD("01/"+STRZERO(nMesIni,2)+"/"+nAno,"ddmmyy")
dDtFim  :=  CTOD("01/"+STRZERO(nMesFim,2)+"/"+nAno,"ddmmyy")
dDtFim	:=	UltimoDia(dDtFim)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Chama impressao               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMatr962
	ExecBlock("MATR962",.F.,.F.)	
Else
	Matr962()
Endif

Return
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³R961Apuracao³Autor³ Juan Jose Pereira     ³ Data ³ 18.12.96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria Arquivo de trabalho com apuracoes de IPI               ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function R961Apuracao(nPeriodo)
Local aCampos	:=	{}
LOCAL	cArqTemp	
LOCAL	i,j,w
LOCAL	cMeses	:=	"ABCDEFGHIJKL"
LOCAL	cArqApur
LOCAL	cConteudo
LOCAL	cLinha
LOCAL cDesc
Local cCodigo
LOCAL	cValor
LOCAL	nValor
LOCAL aCodigos
LOCAL nDevVen := 0
LOCAL nDevCom := 0	
Local	nPos
Local	nApuracao
Local	nTpApur
Local	aOutrApur	:=	{}
Local	nPosX		:=	0
Local	nApurCfp
Local	lAchou	:=	.F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria arquivo para armazenar apuracoes   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aCampos,{"PERIODO"		,"C"	,02	,0	})
AADD(aCampos,{"_001"		,"N"	,14	,2	})
AADD(aCampos,{"_002"		,"N"	,14	,2	})
AADD(aCampos,{"_003"		,"N"	,14	,2	})
AADD(aCampos,{"_004"		,"N"	,14	,2	})
AADD(aCampos,{"_005"		,"N"	,14	,2	})
AADD(aCampos,{"_006"		,"N"	,14	,2	})
AADD(aCampos,{"_007"		,"N"	,14	,2	})
AADD(aCampos,{"_008"		,"N"	,14	,2	})
AADD(aCampos,{"_009"		,"N"	,14	,2	})
AADD(aCampos,{"_010"		,"N"	,14	,2	})
AADD(aCampos,{"_011"		,"N"	,14	,2	})
AADD(aCampos,{"_012"		,"N"	,14	,2	})
AADD(aCampos,{"_013"		,"N"	,14	,2	})
AADD(aCampos,{"_014"		,"N"	,14	,2	})
AADD(aCampos,{"_015"		,"N"	,14	,2	})
AADD(aCampos,{"_016"		,"N"	,14	,2	})
AADD(aCampos,{"_017"		,"N"	,14	,2	})
AADD(aCampos,{"MES"			,"C"	,02	,0	})
cArqTemp	:=	CriaTrab(aCampos)
dbUseArea(.T.,,cArqTemp,cArqTemp,.T.,.F.)
IndRegua(cArqTemp,cArqTemp,"MES+PERIODO",,,"Indexando apura‡”es") //"Indexando apura‡”es"
//
nApurCfp	:= Iif (nPeriodo==Nil, 1, nPeriodo)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Estrutura do array aOutrApur:                                                              ³
//³1->Mes                                                                                     ³
//³2 em diante Arquivos de apuracao. Caso possua 1 eh Mensal, 2 eh Quinzenal e 3 eh Decendial.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//TRATO TANTO NORMAL E POR NCM
For i := nMesIni to nMesFim
	lAchou	:=	.F.
	//
	//Decendial por NCM
	cArqApur	:=	NmArqApur("IP", nAno4, i, 1, 3,"*", .T.)		//Se for apuracao decendial
	If File (cArqApur)	
		aAdd (aOutrApur, {})
		nPos	:=	Len (aOutrApur)
		aAdd (aOutrApur[nPos], i)
		//
		cArqApur	:=	NmArqApur ("IP", nAno4, i, 1, 1,"*", .T.)
		aAdd (aOutrApur[nPos], cArqApur)
		//
		cArqApur	:=	NmArqApur ("IP", nAno4, i, 1, 2,"*", .T.)
		aAdd (aOutrApur[nPos], cArqApur)
		//
		cArqApur	:=	NmArqApur ("IP", nAno4, i, 1, 3,"*", .T.)
		aAdd (aOutrApur[nPos], cArqApur)
		//
		lAchou	:=	.T.
	EndIf
	//
	//Decendial Normal
	If !(lAchou)	//Se nao Achou decendial por NCM
		cArqApur	:=	NmArqApur("IP", nAno4, i, 1, 3,"*", .F.)		//Se for apuracao decendial
		If File (cArqApur)	
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)
			//
			cArqApur	:=	NmArqApur ("IP", nAno4, i, 1, 1,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)
			//
			cArqApur	:=	NmArqApur ("IP", nAno4, i, 1, 2,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)
			//
			cArqApur	:=	NmArqApur ("IP", nAno4, i, 1, 3,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)
			//
			lAchou	:=	.T.
		EndIf
	EndIf
	//
	//Quinzenal por NCM
	If !(lAchou)	//Se nao Achou decendial Normal ou Por Ncm
		cArqApur	:=	NmArqApur ("IP", nAno4, i, 2, 2,"*", .T.)	//Se for Quinzenal
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)
			//
			cArqApur	:=	NmArqApur("IP", nAno4, i, 2, 1,"*", .T.)
			aAdd (aOutrApur[nPos], cArqApur)
			//
			cArqApur	:=	NmArqApur("IP", nAno4, i, 2, 2,"*", .T.)
			aAdd (aOutrApur[nPos], cArqApur)
			//
			lAchou	:=	.T.
		EndIf
	EndIf
	//
	//Quinzenal Normal
	If !(lAchou)	//Se nao Achou decendial Normal ou Por Ncm, nem Quinzenal por NCM
		cArqApur	:=	NmArqApur ("IP", nAno4, i, 2, 2,"*", .F.)	//Se for Quinzenal
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)
			//
			cArqApur	:=	NmArqApur("IP", nAno4, i, 2, 1,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)
			//
			cArqApur	:=	NmArqApur("IP", nAno4, i, 2, 2,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)
			//
			lAchou	:=	.T.
		EndIf				
	EndIf
	//
	//Mensal por NCM
	If !(lAchou)	//Se nao Achou decendial Normal ou Por Ncm, nem Quinzenal por NCM ou Normal
		cArqApur	:=	NmArqApur ("IP", nAno4, i, 3, 1,"*", .T.)	//Se for mensal
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)
			//
			cArqApur	:=	NmArqApur("IP", nAno4, i, 3, 1,"*", .T.)
			aAdd (aOutrApur[nPos], cArqApur)
		EndIf
	EndIf
	//
	//Mensal Normal
	If !(lAchou)	//Se nao Achou decendial Normal ou Por Ncm, nem Quinzenal por NCM ou Normal e nem Menal por NCM
		cArqApur	:=	NmArqApur ("IP", nAno4, i, 3, 1,"*", .F.)	//Se for mensal
		If File (cArqApur)
			aAdd (aOutrApur, {})
			nPos	:=	Len (aOutrApur)
			aAdd (aOutrApur[nPos], i)
			//
			cArqApur	:=	NmArqApur("IP", nAno4, i, 3, 1,"*", .F.)
			aAdd (aOutrApur[nPos], cArqApur)
		EndIf
	EndIf
Next (i)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Busca dados em arquivos de apuracao     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For i:=	nMesIni to nMesFim
	//
	nPosX	:=	aScan (aOutrApur, {|x| x[1]==i})
	If nPosX==0
		nTpApur	:=	Iif (nApurCfp==2, 1, Iif (nApurCfp==1, 2, 3))
	Else
		nTpApur	:=	Len (aOutrApur[nPosX])-1
	EndIf
	//
	//Se tudo estiver ok ateh aqui inicio o processamento da apuracao.
	For j:=1 to nTpApur
		//Crio TRB Zerado
		RecLock(cArqTemp,.T.)
			MES	:=	StrZero (i, 2)
			//
			If (nTpApur==3)	//Decendial
				PERIODO	:=	StrZero (j, 2)
				nApuracao	:=	0
			ElseIf (nTpApur==2)	//Quinzenal
				PERIODO	:=	StrZero (j+3, 2)
				nApuracao	:=	1
			ElseIf (nTpApur==1)	//Mensal
				PERIODO	:=	"00"
				nApuracao	:=	2
			EndIf
		MsUnLock ()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta nome do arquivo do periodo        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (nPosX==0)
			Loop
		Else
			cArqApur	:=	aOutrApur[nPosX][j+1]
		EndIf
		//		
		//Inicio a atribuicao de valores no TRB zerado.
		dbSeek(StrZero(i,2)+Iif (nApuracao==2, "00", Iif (nApuracao==1, StrZero (j+3, 2), StrZero(j,2))))
		RecLock(cArqTemp,.F.)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Carrega e Grava valores                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nDevCom	:= 0
		nDevVen	:= 0
		cConteudo:=	MemoRead(cArqApur)
		aCodigos	:=	{"001","002","003","004","005","006","007","008","009","010","011","012","013","014","015","016","017","018"}
		For w:=1 to MlCount(cConteudo,132)
			cLinha	:=	MemoLine(cConteudo,132,w)
			cDesc		:= substr(cLinha,5,20)
			cCodigo	:=	Trim(Substr(cLinha,1,3))
			if (cCodigo == "010" .and. upper(alltrim(cDesc))=="DEVOLUCOES DE COMPRA") .or.;
				(cCodigo == "004" .and. upper(alltrim(cDesc))=="DEVOLUCOES DE VENDA")
				cValor	:=	Trim(Substr(cLinha,52,18))
				cValor	:=	StrTran(cValor,".")
				cValor	:=	StrTran(cValor,",",".") 
				nValor	:=	Val(cValor)              
				if cCodigo =="010"
					nDevCom	:= nValor
				elseIf cCodigo =="004"	
					nDevVen	:= nValor
				endif
			EndIf	
			nPos		:=	Ascan(aCodigos,{|x|x==cCodigo})
			If nPos==0
				Loop
			Else
				aCodigos[nPos]:="..."
			Endif
			cValor	:=	Trim(Substr(cLinha,52,18))
			cValor	:=	StrTran(cValor,".")
			cValor	:=	StrTran(cValor,",",".")
			nValor	:=	Val(cValor)
			FieldPut(nPos+1,nValor)
		Next w
		(cArqTemp)->_010	-=nDevCom
		(cArqTemp)->_004	-=nDevVen
		MsUnlock()  
	Next j
Next i

Return(cArqTemp)
